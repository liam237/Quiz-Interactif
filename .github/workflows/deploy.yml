name: Déploiement

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Récupérer le code
        uses: actions/checkout@v3

      - name: Configurer Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Se connecter à Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Construire l'image Docker
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/quiz-interactif:latest .

      - name: Pousser l'image Docker
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/quiz-interactif:latest

      - name: Vérifier les permissions des fichiers SSH
        run: |
          ls -la ~/.ssh

      - name: Déployer sur le serveur
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Configuration de SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H abcdef123.ngrok.io >> ~/.ssh/known_hosts || true

          # Déploiement sur le serveur
          ssh -o StrictHostKeyChecking=no liamouuu@abcdef123.ngrok.io << 'EOF'
            set -e
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/quiz-interactif:latest
            
            container_ids=$(docker ps -q --filter "ancestor=${{ secrets.DOCKER_HUB_USERNAME }}/quiz-interactif:latest")
            if [ -n "$container_ids" ]; then
              docker stop $container_ids
              docker rm $container_ids
            fi
            
            docker run -d -p 8080:80 ${{ secrets.DOCKER_HUB_USERNAME }}/quiz-interactif:latest
          EOF
